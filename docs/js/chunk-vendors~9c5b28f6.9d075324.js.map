{"version":3,"sources":["webpack:///./node_modules/material-design-lite/src/progress/progress.js","webpack:///./node_modules/material-design-lite/src/mdlComponentHandler.js","webpack:///./node_modules/material-design-lite/src/spinner/spinner.js","webpack:///./node_modules/register-service-worker/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/material-design-lite/src/button/button.js","webpack:///./node_modules/material-design-lite/src/textfield/textfield.js"],"names":["MaterialProgress","element","this","element_","init","window","prototype","Constant_","CssClasses_","INDETERMINATE_CLASS","setProgress","p","classList","contains","progressbar_","style","width","setBuffer","bufferbar_","auxbar_","el","document","createElement","className","appendChild","add","componentHandler","register","constructor","classAsString","cssClass","widget","upgradeDom","optJsClass","optCssClass","upgradeElement","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","config","downgradeElements","nodes","registeredComponents_","createdComponents_","componentConfigProperty_","findRegisteredClass_","name","optReplace","i","length","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","upgradedList","indexOf","createEvent_","eventType","bubbles","cancelable","CustomEvent","ev","createEvent","initEvent","upgradeDomInternal","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","classesToUpgrade","push","forEach","component","setAttribute","join","instance","classConstructor","j","m","callbacks","upgradedEv","upgradeElementsInternal","Array","isArray","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","item","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","documentElement","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","remove","start","waitWindowLoad","isLocalhost","Boolean","location","hostname","match","swUrl","hooks","registrationOptions","emit","hook","args","len","arguments","apply","navigator","then","checkValidServiceWorker","serviceWorker","ready","registration","registerValidSW","handleError","error","onLine","waiting","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","fetch","response","status","unregister","headers","get","Promise","resolve","cb","global","undefined","Op","Object","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","result","done","value","toString","keys","object","key","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","rootEntry","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","makeInvokeMethod","tryCatch","fn","obj","err","invoke","reject","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","doneResult","delegateResult","maybeInvokeDelegate","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","MaterialButton","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","rippleContainer","rippleElement_","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","INPUT","IS_DIRTY","IS_FOCUSED","IS_DISABLED","IS_INVALID","IS_UPGRADED","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","target","keyCode","preventDefault","onFocus_","onBlur_","onReset_","updateClasses_","checkDisabled","checkValidity","checkDirty","checkFocus","input_","querySelector","validity","valid","change","label_","hasAttribute","parseInt","boundUpdateClassesHandler","boundFocusHandler","boundBlurHandler","boundResetHandler","boundKeyDownHandler","invalid","focus"],"mappings":"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","file":"js/chunk-vendors~9c5b28f6.9d075324.js","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialProgress'] = MaterialProgress;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialProgress.prototype.Constant_ = {\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialProgress.prototype.CssClasses_ = {\n    INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\n  };\n\n  /**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\n  MaterialProgress.prototype.setProgress = function(p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n      return;\n    }\n\n    this.progressbar_.style.width = p + '%';\n  };\n  MaterialProgress.prototype['setProgress'] =\n      MaterialProgress.prototype.setProgress;\n\n  /**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\n  MaterialProgress.prototype.setBuffer = function(p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = (100 - p) + '%';\n  };\n  MaterialProgress.prototype['setBuffer'] =\n      MaterialProgress.prototype.setBuffer;\n\n  /**\n   * Initialize element.\n   */\n  MaterialProgress.prototype.init = function() {\n    if (this.element_) {\n      var el = document.createElement('div');\n      el.className = 'progressbar bar bar1';\n      this.element_.appendChild(el);\n      this.progressbar_ = el;\n\n      el = document.createElement('div');\n      el.className = 'bufferbar bar bar2';\n      this.element_.appendChild(el);\n      this.bufferbar_ = el;\n\n      el = document.createElement('div');\n      el.className = 'auxbar bar bar3';\n      this.element_.appendChild(el);\n      this.auxbar_ = el;\n\n      this.progressbar_.style.width = '0%';\n      this.bufferbar_.style.width = '100%';\n      this.auxbar_.style.width = '0%';\n\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Create an event object.\n   *\n   * @param {string} eventType The type name of the event.\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\n   * @param {boolean} cancelable Whether the event can be canceled.\n   * @returns {!Event}\n   */\n  function createEvent_(eventType, bubbles, cancelable) {\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n      return new CustomEvent(eventType, {\n        bubbles: bubbles,\n        cancelable: cancelable\n      });\n    } else {\n      var ev = document.createEvent('Events');\n      ev.initEvent(eventType, bubbles, cancelable);\n      return ev;\n    }\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    // Allow upgrade to be canceled by canceling emitted event.\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n    element.dispatchEvent(upgradingEv);\n    if (upgradingEv.defaultPrevented) {\n      return;\n    }\n\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n      element.dispatchEvent(upgradedEv);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\n  var MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSpinner'] = MaterialSpinner;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSpinner.prototype.Constant_ = {\n    MDL_SPINNER_LAYER_COUNT: 4\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n  };\n\n  /**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\n  MaterialSpinner.prototype.createLayer = function(index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n\n    var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n    for (var i = 0; i < circleOwners.length; i++) {\n      var circle = document.createElement('div');\n      circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n      circleOwners[i].appendChild(circle);\n    }\n\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n\n    this.element_.appendChild(layer);\n  };\n  MaterialSpinner.prototype['createLayer'] =\n      MaterialSpinner.prototype.createLayer;\n\n  /**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.stop = function() {\n    this.element_.classList.remove('is-active');\n  };\n  MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n\n  /**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.start = function() {\n    this.element_.classList.add('is-active');\n  };\n  MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSpinner.prototype.init = function() {\n    if (this.element_) {\n      for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n        this.createLayer(i);\n      }\n\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n  });\n})();\n","// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nvar waitWindowLoad\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== 'undefined') {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof Promise !== 'undefined') {\n    waitWindowLoad = new Promise(function (resolve) { return window.addEventListener('load', resolve); })\n  } else {\n    waitWindowLoad = { then: function (cb) { return window.addEventListener('load', cb); } }\n  }\n}\n\nexport function register (swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        })\n      }\n    })\n  }\n}\n\nfunction handleError (emit, error) {\n  if (!navigator.onLine) {\n    emit('offline')\n  }\n  emit('error', error)\n}\n\nfunction registerValidSW (swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nfunction checkValidServiceWorker (swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n        emit('error', new Error(\n          \"Expected \" + swUrl + \" to have javascript content-type, \" +\n          \"but received \" + (response.headers.get('content-type'))))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    })\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialButton'] = MaterialButton;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialButton.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialButton.prototype.blurHandler_ = function(event) {\n    if (event) {\n      this.element_.blur();\n    }\n  };\n\n  // Public methods.\n\n  /**\n   * Disable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.disable = function() {\n    this.element_.disabled = true;\n  };\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n\n  /**\n   * Enable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.enable = function() {\n    this.element_.disabled = false;\n  };\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n\n  /**\n   * Initialize element.\n   */\n  MaterialButton.prototype.init = function() {\n    if (this.element_) {\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleElement_ = document.createElement('span');\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(this.rippleElement_);\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n        this.element_.appendChild(rippleContainer);\n      }\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTextfield'] = MaterialTextfield;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n  };\n\n  /**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onKeyDown_ = function(event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n      if (currentRowCount >= this.maxRows) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onReset_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialTextfield.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n  };\n\n  // Public methods.\n\n  /**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkDisabled = function() {\n    if (this.input_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialTextfield.prototype['checkDisabled'] =\n      MaterialTextfield.prototype.checkDisabled;\n\n  /**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\n  MaterialTextfield.prototype.checkFocus = function() {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n      this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n  };\n  MaterialTextfield.prototype['checkFocus'] =\n    MaterialTextfield.prototype.checkFocus;\n\n  /**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkValidity = function() {\n    if (this.input_.validity) {\n      if (this.input_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n      } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n      }\n    }\n  };\n  MaterialTextfield.prototype['checkValidity'] =\n      MaterialTextfield.prototype.checkValidity;\n\n  /**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkDirty = function() {\n    if (this.input_.value && this.input_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n  MaterialTextfield.prototype['checkDirty'] =\n      MaterialTextfield.prototype.checkDirty;\n\n  /**\n   * Disable text field.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.disable = function() {\n    this.input_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n\n  /**\n   * Enable text field.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.enable = function() {\n    this.input_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n\n  /**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialTextfield.prototype.change = function(value) {\n\n    this.input_.value = value || '';\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialTextfield.prototype.init = function() {\n\n    if (this.element_) {\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n      this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      if (this.input_) {\n        if (this.input_.hasAttribute(\n              /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE))) {\n          this.maxRows = parseInt(this.input_.getAttribute(\n              /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE)), 10);\n          if (isNaN(this.maxRows)) {\n            this.maxRows = this.Constant_.NO_MAX_ROWS;\n          }\n        }\n\n        if (this.input_.hasAttribute('placeholder')) {\n          this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n        }\n\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n        this.input_.addEventListener('focus', this.boundFocusHandler);\n        this.input_.addEventListener('blur', this.boundBlurHandler);\n        this.input_.addEventListener('reset', this.boundResetHandler);\n\n        if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n          // TODO: This should handle pasting multi line text.\n          // Currently doesn't.\n          this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n          this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n        }\n        var invalid = this.element_.classList\n          .contains(this.CssClasses_.IS_INVALID);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        if (invalid) {\n          this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n        if (this.input_.hasAttribute('autofocus')) {\n          this.element_.focus();\n          this.checkFocus();\n        }\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n  });\n})();\n"],"sourceRoot":""}